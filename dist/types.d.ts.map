{"mappings":"ACAA;IACI,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,EAAE,MAAM,CAAC;IACf,KAAK,EAAE,MAAM,CAAC;IACd,UAAU,EAAE,MAAM,CAAC;IACnB,WAAW,EAAE,MAAM,CAAC;IACpB,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC;CAC5B;ACJD,OAAO,MAAM;eA2CS,MAAM,eAAe,UAAU,KAAG,IAAI;CAiBxD,CAAC","sources":["src/src/enums/Errors.ts","src/src/interfaces/IHexOptions.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,"import { Errors } from \"./enums/Errors\";\nimport { DefaultHexOptions, HexOptions } from \"./interfaces/IHexOptions\";\n\nexport const HexGrid = (() => {\n\n    let _canvas: HTMLCanvasElement;\n    let _ctx: CanvasRenderingContext2D;\n    let _hexOptions: HexOptions;\n\n    function _setupCanvas(el: HTMLCanvasElement) {\n        _canvas = el;\n        _canvas.width = el.offsetWidth;\n        _canvas.height = el.offsetHeight;\n        _ctx = <CanvasRenderingContext2D>_canvas.getContext(\"2d\");\n    }\n\n    function _drawHex(x: number, y: number) {\n        _ctx.beginPath();\n        for (let i = 0; i < 6; i++) {\n            const angle = Math.PI / 3 * i;\n            _ctx.lineTo(x + _hexOptions.radius * Math.cos(angle), y + _hexOptions.radius * Math.sin(angle));\n        }\n        _ctx.closePath();\n        _ctx.fill();\n        _ctx.stroke();\n    }\n\n    function _drawGrid() {\n        \n    }\n\n    function _setCanvasStyling() {\n        if (_ctx) {\n            _ctx.fillStyle = _hexOptions.fillColor ? _hexOptions.fillColor : \"transparent\";\n            _ctx.strokeStyle = _hexOptions.borderColor;\n            _ctx.lineWidth = _hexOptions.borderSize;\n            _ctx.save();\n        }\n    }\n\n    function _setHexOptions(options: HexOptions) {\n        _hexOptions = options;\n        _hexOptions.height = Math.sqrt(3) * options.radius;\n        _hexOptions.width = 2 * options.radius;\n    }\n\n    function draw(id: string, dotOptions?: HexOptions): void {\n        const el = document.getElementById(id);\n        if (el && el instanceof HTMLCanvasElement) {\n            _setupCanvas(el);\n            _setHexOptions(dotOptions ? dotOptions : DefaultHexOptions);\n            _setCanvasStyling();\n            _drawHex(_canvas.width / 2, _canvas.height / 2);\n        } else {\n            throw Error(Errors.NO_CANVAS);\n        }\n    }\n\n    return {\n        draw\n    }\n\n\n})();"],"names":[],"version":3,"file":"types.d.ts.map","sourceRoot":"../"}